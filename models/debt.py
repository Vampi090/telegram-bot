from datetime import datetime

class Debt:
    """
    –ú–æ–¥–µ–ª—å –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–æ–ª–≥–∞.
    """
    def __init__(self, id=None, user_id=None, name="", amount=0.0, status="open", timestamp=None):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –¥–æ–ª–≥–∞.
        
        Args:
            id (int, optional): ID –¥–æ–ª–≥–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            user_id (int, optional): ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            name (str, optional): –ò–º—è –¥–æ–ª–∂–Ω–∏–∫–∞ –∏–ª–∏ –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞
            amount (float, optional): –°—É–º–º–∞ –¥–æ–ª–≥–∞
            status (str, optional): –°—Ç–∞—Ç—É—Å –¥–æ–ª–≥–∞ (open/closed)
            timestamp (str, optional): –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–ª–≥–∞
        """
        self.id = id
        self.user_id = user_id
        self.name = name
        self.amount = amount
        self.status = status
            
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è, –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ
        if timestamp is None:
            self.timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        else:
            self.timestamp = timestamp
    
    @classmethod
    def from_db_tuple(cls, db_tuple):
        """
        –°–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç Debt –∏–∑ –∫–æ—Ä—Ç–µ–∂–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
        
        Args:
            db_tuple (tuple): –ö–æ—Ä—Ç–µ–∂ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (id, user_id, name, amount, status, timestamp)
            
        Returns:
            Debt: –ù–æ–≤—ã–π –æ–±—ä–µ–∫—Ç Debt
        """
        if not db_tuple:
            return None
            
        if len(db_tuple) == 6:  # –ï—Å–ª–∏ –≤ –∫–æ—Ä—Ç–µ–∂–µ 6 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (id, user_id, name, amount, status, timestamp)
            id, user_id, name, amount, status, timestamp = db_tuple
            return cls(id=id, user_id=user_id, name=name, amount=amount, 
                      status=status, timestamp=timestamp)
        elif len(db_tuple) == 4:  # –ï—Å–ª–∏ –≤ –∫–æ—Ä—Ç–µ–∂–µ 4 —ç–ª–µ–º–µ–Ω—Ç–∞ (name, amount, status, timestamp)
            name, amount, status, timestamp = db_tuple
            return cls(name=name, amount=amount, status=status, timestamp=timestamp)
        elif len(db_tuple) == 2:  # –ï—Å–ª–∏ –≤ –∫–æ—Ä—Ç–µ–∂–µ 2 —ç–ª–µ–º–µ–Ω—Ç–∞ (name, amount)
            name, amount = db_tuple
            return cls(name=name, amount=amount)
        else:
            return None
    
    def to_dict(self):
        """
        –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –æ–±—ä–µ–∫—Ç Debt –≤ —Å–ª–æ–≤–∞—Ä—å.
        
        Returns:
            dict: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–æ–ª–≥–∞
        """
        return {
            'id': self.id,
            'user_id': self.user_id,
            'name': self.name,
            'amount': self.amount,
            'status': self.status,
            'timestamp': self.timestamp
        }
    
    def __str__(self):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–æ–ª–≥–∞.
        
        Returns:
            str: –°—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–æ–ª–≥–∞
        """
        return f"üë§ {self.name} | üí∞ {self.amount}‚ÇΩ | ‚úÖ {self.status} | üìÖ {self.timestamp}"