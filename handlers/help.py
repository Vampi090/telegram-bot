from telegram import Update
from telegram.ext import CallbackContext, CallbackQueryHandler, CommandHandler
from keyboards.help_menu import help_menu_keyboard
from services.logging_service import log_command_usage


async def handle_help_callback(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –º–µ–Ω—é –ø–æ–º–æ—â–∏"""
    await log_command_usage(update, context)
    user = update.effective_user

    reply_markup = help_menu_keyboard()

    if update.callback_query:
        await update.callback_query.answer()
        await update.callback_query.edit_message_text(
            text="‚ùì –î–æ–ø–æ–º–æ–≥–∞",
            reply_markup=reply_markup
        )


async def help_command(update: Update, context: CallbackContext):
    """–§—É–Ω–∫—Ü–∏—è –ø–æ–º–æ—â–∏ (—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥)"""
    await log_command_usage(update, context)

    help_text = """
üìå *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
/start ‚Äî –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞  
/add [—Å—É–º–º–∞] [–∫–∞—Ç–µ–≥–æ—Ä–∏—è] ‚Äî –î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é  
/history ‚Äî –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π  
/stats ‚Äî –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤  
/goal ‚Äî –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–µ–ª—è–º–∏  
/undo ‚Äî –û—Ç–º–µ–Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏  
/export ‚Äî –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö  
/chart ‚Äî –ì—Ä–∞—Ñ–∏–∫–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤  
/reminder ‚Äî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –±—é–¥–∂–µ—Ç–µ  
/budget ‚Äî –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–æ–º  
/convert ‚Äî –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∞–ª—é—Ç  
/sync ‚Äî –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å Google –¢–∞–±–ª–∏—Ü–∞–º–∏  
/report [–º–µ—Å—è—Ü] ‚Äî –°–≤–æ–¥–∫–∞ –∑–∞ –º–µ—Å—è—Ü  
/debt ‚Äî –£—á–µ—Ç –¥–æ–ª–≥–æ–≤
"""

    if update.callback_query:
        await update.callback_query.answer()
        await update.callback_query.edit_message_text(
            text=help_text,
            parse_mode="Markdown",
            reply_markup=help_menu_keyboard()
        )
    elif update.message:
        await update.message.reply_text(
            help_text,
            parse_mode="Markdown",
            reply_markup=help_menu_keyboard()
        )


async def handle_guide_callback(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –º–∏–Ω–∏-–≥–∞–π–¥–∞"""
    await log_command_usage(update, context)

    guide_text = """
üìñ *–ú–∏–Ω–∏-–≥–∞–π–¥ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:*

1Ô∏è‚É£ *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π*
   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /add –∏–ª–∏ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å" –≤ –º–µ–Ω—é
   ‚Ä¢ –£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É (–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—É—é –¥–ª—è –¥–æ—Ö–æ–¥–æ–≤, –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—É—é –¥–ª—è —Ä–∞—Å—Ö–æ–¥–æ–≤)
   ‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é

2Ô∏è‚É£ *–ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏*
   ‚Ä¢ –ö–æ–º–∞–Ω–¥–∞ /history –∏–ª–∏ –∫–Ω–æ–ø–∫–∞ "–ò—Å—Ç–æ—Ä–∏—è" –ø–æ–∫–∞–∂–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏

3Ô∏è‚É£ *–ê–Ω–∞–ª–∏—Ç–∏–∫–∞*
   ‚Ä¢ –í —Ä–∞–∑–¥–µ–ª–µ "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞" –¥–æ—Å—Ç—É–ø–Ω—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞, –≥—Ä–∞—Ñ–∏–∫–∏ –∏ –æ—Ç—á–µ—Ç—ã
   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /stats –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏

4Ô∏è‚É£ *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–æ–º*
   ‚Ä¢ –°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ü–µ–ª–∏ —á–µ—Ä–µ–∑ /goal
   ‚Ä¢ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Ç–µ –±—é–¥–∂–µ—Ç—ã —Å –ø–æ–º–æ—â—å—é /budget

5Ô∏è‚É£ *–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏*
   ‚Ä¢ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∞–ª—é—Ç: /convert
   ‚Ä¢ –£—á–µ—Ç –¥–æ–ª–≥–æ–≤: /debt
   ‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö: /export
"""

    if update.callback_query:
        await update.callback_query.answer()
        await update.callback_query.edit_message_text(
            text=guide_text,
            parse_mode="Markdown",
            reply_markup=help_menu_keyboard()
        )


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
help_section_handler = CallbackQueryHandler(handle_help_callback, pattern='^help_section$')
help_handler = CommandHandler("help", help_command)
guide_handler = CallbackQueryHandler(handle_guide_callback, pattern='^guide$')
help_callback_handler = CallbackQueryHandler(help_command, pattern='^help$')
